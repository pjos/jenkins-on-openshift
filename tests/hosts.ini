[dev]
dev-1

[dev:vars]
project_name=jenkins-on-openshift-dev
project_display_name="Development - Software lifecycle"
project_description="Development - Software Development Lifecycle (SDLC)"
editor_users=[]
viewer_groups=[]

[prod]
prod-1
[prod:vars]
project_name=jenkins-on-openshift-prod
project_display_name="Production - Software lifecycle"
project_description="Production - Software Development Lifecycle (SDLC)"
editor_users=[]
viewer_groups=[]

[registry]
registry-1

[registry:vars]
project_name=jenkins-on-openshift-registry
project_display_name="Registry - Software lifecycle"
project_description="Registry - Software Development Lifecycle (SDLC)"

editor_users=["system:serviceaccount:jenkins-on-openshift-dev:builder"]
viewer_groups=["system:serviceaccounts:jenkins-on-openshift-dev","system:serviceaccounts:jenkins-on-openshift-stage","system:serviceaccounts:jenkins-on-openshift-prod"]

[stage]
stage-1

[stage:vars]
project_name=jenkins-on-openshift-stage
project_display_name="Stage - Software lifecycle"
project_description="Stage - Software Development Lifecycle (SDLC)"
editor_users=[]
viewer_groups=[]



[all:vars]
admin_users=[]
viewer_users=[]
deprecated_admin_users=[]
deprecated_editor_users=[]
deprecated_viewer_users=[]
deprecated_viewer_groups=[]


# **NOTE** The ip address has to be of the host running `oc cluster up`
# It _cannot_ be localhost
clusterhost="openshift-ait.e2e.bos.redhat.com:8443"
ansible_connection=local
gather_facts=False


source_repo_url="https://github.com/pjos/jenkins-on-openshift.git"
source_repo_branch="master"
app_template_path="app/openshift/nodejs-mongodb-persistent.json"
app_name="nodejs-mongo-persistent"
app_base_tag="nodejs:6"

# ----------------------
# Environment parameters
# ----------------------

# The hostname to the central registry where all images are stored.
# You can add a port if needed, e.g. registry.example.com:5000
central_registry_hostname="172.30.214.11:5000"

# Wether to validate TLS/SSL certs involved in communications with OpenShift
# and/or registry. Note: setting this to False may not be enough: this only
# affects interactions managed by these playbooks, but image push/pull is
# handled by the nodes, so you might have to adjust container runtime
# configuration there
validate_certs=False

# --------------
# Job parameters
# --------------
notify_email_list="devops@example.com"
notify_email_from="jenkins@example.com"
notify_email_replyto="noreply@example.com"

# --------------------------------
# OpenShift client command options
# --------------------------------
# URL to location of openshift origin client
oc_url="https://github.com/openshift/origin/releases/download/v3.6.1/openshift-origin-client-tools-v3.6.1-008f2d5-linux-64bit.tar.gz"
# Destination location of the oc binary
oc_extract_dest="{{ ansible_user_dir }}/"
# Path to openshift client
oc_path="/usr/bin/oc"

# Disable logging of openshift client command/shell
# to hide tokens.
# *NOTE*: Set to False if debugging is required.
oc_no_log=False

# Client issue creating dockercfg secrets introduced
# in v3.7.  This workaround downloads the Origin v3.6.1
# as a temporary resolution to the issue.  See more information
# in the links below.
#
# https://github.com/openshift/origin/pull/18062
# https://bugzilla.redhat.com/show_bug.cgi?id=1531511
# https://bugzilla.redhat.com/show_bug.cgi?id=1476330
enable_dockercfg_workaround=True

#
# This is how the "oc" client will be invoked.
# The token/clusterhost/project_name are set in vars for each environment
oc="{{ oc_path }} {% if not validate_certs %}--insecure-skip-tls-verify{% endif %} --token={{ token }} --server=https://{{ clusterhost }} -n {{ project_name }}"
